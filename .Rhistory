devtools::install_github("hadley/tidyverse")
install.packages("tidytext")
library(tidyverse)
library(lubridate)
library(stringr)
library(forcats)
library(tidytext)
library(sqldf)
library(plotly)
library(leaflet)
library(leaflet.extras)
library(ggplot2)
library(wordcloud2)
library(tm)
#################################################################################################
dataset = read.csv("C:/Users/Utilisateur/Documents/school SI4/data-valorization/archive (1)/Hotel_Reviews.csv")
################################################################################################
# check for if any null values are present in which columns
sapply(dataset, function(x)sum(is.na(x)))
##################################################################################################
head(summary(as.factor(dataset$Reviewer_Nationality)), n = 1) # getting top Nationality for na's
##################################################################################################
# can only run once without getting lat & lng errors!
dataset <- dataset %>%
select(colnames(dataset), -lat,-lng, -Review_Total_Negative_Word_Counts, -Review_Total_Positive_Word_Counts, -Additional_Number_of_Scoring) %>%
mutate(Positive_Review = ifelse(is.na(Positive_Review),
"Nothing",
Positive_Review)) %>%
mutate(Negative_Review = ifelse(is.na(Negative_Review),
"Nothing",
Negative_Review))
sapply(dataset, function(x)sum(is.na(x)))
# good no more NAs!
####################################################################################################
dataset <- dataset %>%
mutate(Review_Date = lubridate::mdy(Review_Date))
#summary(df)
# Time Series Analysis
# is the score dependent on time of year?
dataset <- dataset %>%
mutate(Year = year(Review_Date)) %>%
mutate(Month = month(Review_Date))
# credit to fellow kaggle user, GunnvantSaini
dataset <- dataset %>%
mutate(Country = sapply(str_split(Hotel_Address," "),function(x){x[length(x)]}))
######################################################################################################
# subsetting out lengthy columns, keeping hotel address and review data if
# needed to join
dataset_nlp <- dataset %>%
select(Hotel_Name, Country, Review_Date, Year, Month,
Total_Number_of_Reviews_Reviewer_Has_Given, Negative_Review, Reviewer_Nationality,
Positive_Review,Total_Number_of_Reviews_Reviewer_Has_Given, Tags, Reviewer_Score)
dataset_clean <- dataset %>%
select(Hotel_Name, Country, Review_Date, Year, Month, Average_Score,
Reviewer_Nationality,Reviewer_Score,Total_Number_of_Reviews_Reviewer_Has_Given)
print("Our dataset cleaned:" )
head(dataset_clean)
print("First column of NLP:" )
head(dataset_nlp, n = 1)
#########################################################################################################
#plot_world_cloud
reviews <- dataset_clean[sample(nrow(dataset_clean), 40000), ]
reviews <- reviews[reviews$Positive_Review!='Nothing',]
reviews <- reviews[reviews$Negative_Review!='Nothing',]
term_freq <- function(dataset_clean,sent){
if(sent=='pos'){
corpus <- Corpus(VectorSource(dataset_clean$Positive_Review))
}else{
corpus <- Corpus(VectorSource(dataset_clean$Negative_Review))
}
corpus <- tm_map(corpus, removeWords, stopwords("SMART"))
corpus <- tm_map(corpus, removeWords, stopwords("en"))
corpus <- tm_map(corpus, stripWhitespace)
dtm <-TermDocumentMatrix(corpus)
mat_dtm <- as.matrix(dtm)
v_dtm <- sort(rowSums(mat_dtm),decreasing = TRUE)
FreqMat <- data.frame(word = names(v_dtm), Freq = v_dtm)
FreqMat <- FreqMat[1:50,]
return(FreqMat)
}
wordcloud2(data = term_freq(reviews,'pos'),minRotation = 0,maxRotation = 0)
setwd("~/GitHub/kaggle-/Kaggle_project")
source("projet.r")
View(review_range)
View(review_range)
source("projet.r")
setwd("~/GitHub/kaggle-/Kaggle_project")
source("projet.r")
View(dataset)
View(dataset_clean)
View(dataset_clean)
View(review_range)
View(review_range)
source("projet.r")
View(g1)
View(g2)
View(p1)
View(p3)
View(review_range)
View(p3)
View(p2)
View(dataset_f)
View(dataset_clean)
View(dataset)
View(dataset_clean)
View(p2)
View(p2)
View(p1)
View(g2)
View(df_eda)
View(dataset)
View(dataset_f)
source("projet.r")
source("projet.r")
